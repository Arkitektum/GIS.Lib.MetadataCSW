#Modifications to the code file that have been done after generating code with xsd.exe


# add MD_Metadata_Type to SearchResultsType


    public partial class SearchResultsType {

        [System.Xml.Serialization.XmlElementAttribute("MD_Metadata", typeof(MD_Metadata_Type), Namespace = "http://www.isotc211.org/2005/gmd")]
        public object[] Items {



# Add support for dc:URI element in DCMIRecordType

In class:

		public partial class DCMIRecordType : AbstractRecordType {

Add this attribute:

        [System.Xml.Serialization.XmlElementAttribute("URI", typeof(SimpleUriLiteral), Namespace = "http://purl.org/dc/elements/1.1/")]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public SimpleLiteral[] Items {

In enum:

		public enum ItemsChoiceType24 {

Add this attribute:
			
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("http://purl.org/dc/elements/1.1/:URI")]
        URI,


Add type: 

    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://purl.org/dc/elements/1.1/")]
    [System.Xml.Serialization.XmlRootAttribute("title", Namespace = "http://purl.org/dc/elements/1.1/",
        IsNullable = false)]
    public partial class SimpleUriLiteral : SimpleLiteral
    {
        private string _protocolField;

        private string _nameField;

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string protocol
        {
            get { return this._protocolField; }
            set { this._protocolField = value; }
        }

        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get { return this._nameField; }
            set { this._nameField = value; }
        }
    }



# Fix funky version of xml-any element for InsertType
public partial class InsertType {

        private object[] itemsField;
        
        private string typeNameField;
        
        private string handleField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MD_Metadata", typeof(MD_Metadata_Type), Namespace = "http://www.isotc211.org/2005/gmd")]
        [System.Xml.Serialization.XmlElementAttribute("Constraint", typeof(QueryConstraintType))]
        [System.Xml.Serialization.XmlElementAttribute("RecordProperty", typeof(RecordPropertyType))]
        public object[] Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }


#
Change LiteralType from a confused version of string[] and XmlAnyElement, to be a string[]. XSD states that it should be a text element. 

public partial class LiteralType : ExpressionType {
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }



#
public partial class GenericName_PropertyType {
        
        private CodeType abstractGenericNameField;
        
        private string nilReasonField;
        
        /// <remarks/>
        public CodeType AbstractGenericName {
            get {
                return this.abstractGenericNameField;
            }
            set {
                this.abstractGenericNameField = value;
            }
        }
    
Replace code above with:

	public partial class GenericName_PropertyType {
    
    private CodeType itemField;
    
    private GenericNameItemChoiceType itemElementNameField;
    
    private string nilReasonField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("LocalName", typeof(CodeType))]
    [System.Xml.Serialization.XmlElementAttribute("ScopedName", typeof(CodeType))]
    [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
    public CodeType Item {
        get {
            return this.itemField;
        }
        set {
            this.itemField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIgnoreAttribute()]
    public GenericNameItemChoiceType ItemElementName {
        get {
            return this.itemElementNameField;
        }
        set {
            this.itemElementNameField = value;
        }
    }
    
And append following enum:

[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
[System.SerializableAttribute()]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.isotc211.org/2005/gco", IncludeInSchema=false)]
public enum GenericNameItemChoiceType {
    
    /// <remarks/>
    LocalName,
    
    /// <remarks/>
    ScopedName,
}


#
	public partial class MD_Identifier_PropertyType {
        
        [XmlElement("RS_Identifier", typeof(RS_Identifier_Type))]
        [XmlElement("MD_Identifier", typeof(MD_Identifier_Type))]
        public MD_Identifier_Type MD_Identifier {


#
	public partial class MD_ContentInformation_PropertyType {
	
		[XmlElement(Type = typeof(MD_FeatureCatalogueDescription_Type), ElementName = "MD_FeatureCatalogueDescription", Namespace = "http://www.isotc211.org/2005/gmd")]
		[XmlElement(Type = typeof(MD_CoverageDescription_Type), ElementName = "MD_CoverageDescription", Namespace = "http://www.isotc211.org/2005/gmd")]
		public AbstractMD_ContentInformation_Type AbstractMD_ContentInformation {

#
    public partial class UpdateType {
        
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MD_Metadata", typeof(MD_Metadata_Type), Namespace = "http://www.isotc211.org/2005/gmd")]
        [System.Xml.Serialization.XmlElementAttribute("Constraint", typeof(QueryConstraintType))]
        [System.Xml.Serialization.XmlElementAttribute("RecordProperty", typeof(RecordPropertyType))]
        public object[] Items {

#
	public partial class GetRecordByIdResponseType {
       
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        [System.Xml.Serialization.XmlElementAttribute("MD_Metadata", typeof(MD_Metadata_Type), Namespace = "http://www.isotc211.org/2005/gmd")]
        [System.Xml.Serialization.XmlElementAttribute("AbstractRecord", typeof(AbstractRecordType))]
        [System.Xml.Serialization.XmlElementAttribute("BriefRecord", typeof(BriefRecordType))]
        [System.Xml.Serialization.XmlElementAttribute("DCMIRecord", typeof(DCMIRecordType))]
        [System.Xml.Serialization.XmlElementAttribute("Record", typeof(RecordType))]
        [System.Xml.Serialization.XmlElementAttribute("SummaryRecord", typeof(SummaryRecordType))]
        public object[] Items {
		
#
	public partial class MD_Identification_PropertyType {

		[XmlElement(Type = typeof(SV_ServiceIdentification_Type), ElementName = "SV_ServiceIdentification", Namespace = "http://www.isotc211.org/2005/srv")]
		[XmlElement(Type = typeof(MD_ServiceIdentification_Type), ElementName="MD_ServiceIdentification", Namespace = "http://www.isotc211.org/2005/gmd")]
		[XmlElement(Type = typeof(MD_DataIdentification_Type), ElementName = "MD_DataIdentification", Namespace = "http://www.isotc211.org/2005/gmd")]
		public AbstractMD_Identification_Type AbstractMD_Identification {

#
	public partial class MD_Constraints_PropertyType {

        [XmlElement(typeof(MD_Constraints_Type), ElementName = "MD_Constraints")]
        [XmlElement(typeof(MD_LegalConstraints_Type), ElementName = "MD_LegalConstraints")]
        [XmlElement(typeof(MD_SecurityConstraints_Type), ElementName = "MD_SecurityConstraints")]
        public MD_Constraints_Type MD_Constraints {

#
	public partial class EX_GeographicExtent_PropertyType {
    
        [XmlElement(typeof(EX_GeographicDescription_Type), ElementName = "EX_GeographicDescription")]
        [XmlElement(typeof(EX_GeographicBoundingBox_Type), ElementName = "EX_GeographicBoundingBox")]
        [XmlElement(typeof(EX_BoundingPolygon_Type), ElementName = "EX_BoundingPolygon")]
        public AbstractEX_GeographicExtent_Type AbstractEX_GeographicExtent {

#
    public partial class DQ_Element_PropertyType {
        
        [XmlElement(typeof(AbstractDQ_Completeness_Type), ElementName = "AbstractDQ_Completeness")]
        [XmlElement(typeof(DQ_CompletenessCommission_Type), ElementName = "DQ_CompletenessCommission")]
        [XmlElement(typeof(DQ_CompletenessOmission_Type), ElementName = "DQ_CompletenessOmission")]
        [XmlElement(typeof(AbstractDQ_LogicalConsistency_Type), ElementName = "AbstractDQ_LogicalConsistency")]
        [XmlElement(typeof(DQ_ConceptualConsistency_Type), ElementName = "DQ_ConceptualConsistency")]
        [XmlElement(typeof(DQ_DomainConsistency_Type), ElementName = "DQ_DomainConsistency")]
        [XmlElement(typeof(DQ_FormatConsistency_Type), ElementName = "DQ_FormatConsistency")]
        [XmlElement(typeof(DQ_TopologicalConsistency_Type), ElementName = "(DQ_TopologicalConsistency")]
        [XmlElement(typeof(AbstractDQ_PositionalAccuracy_Type), ElementName = "AbstractDQ_PositionalAccuracy")]
        [XmlElement(typeof(DQ_AbsoluteExternalPositionalAccuracy_Type), ElementName = "DQ_AbsoluteExternalPositionalAccuracy")]
        [XmlElement(typeof(DQ_GriddedDataPositionalAccuracy_Type), ElementName = "DQ_GriddedDataPositionalAccuracy")]
        [XmlElement(typeof(DQ_RelativeInternalPositionalAccuracy_Type), ElementName = "DQ_RelativeInternalPositionalAccuracy")]
        [XmlElement(typeof(AbstractDQ_ThematicAccuracy_Type), ElementName = "AbstractDQ_ThematicAccuracy")]
        [XmlElement(typeof(DQ_ThematicClassificationCorrectness_Type), ElementName = "DQ_ThematicClassificationCorrectness")]
        [XmlElement(typeof(DQ_NonQuantitativeAttributeAccuracy_Type), ElementName = "DQ_NonQuantitativeAttributeAccuracy")]
        [XmlElement(typeof(DQ_QuantitativeAttributeAccuracy_Type), ElementName = "DQ_QuantitativeAttributeAccuracy")]
        [XmlElement(typeof(AbstractDQ_TemporalAccuracy_Type), ElementName = "AbstractDQ_TemporalAccuracy")]
        [XmlElement(typeof(DQ_AccuracyOfATimeMeasurement_Type), ElementName = "DQ_AccuracyOfATimeMeasurement")]
        [XmlElement(typeof(DQ_TemporalConsistency_Type), ElementName = "DQ_TemporalConsistency")]
        [XmlElement(typeof(DQ_TemporalValidity_Type), ElementName = "DQ_TemporalValidity")]
        public AbstractDQ_Element_Type AbstractDQ_Element {

#
    public partial class DQ_Result_PropertyType {
        
        [XmlElement(typeof(DQ_QuantitativeResult_Type), ElementName = "DQ_QuantitativeResult")]
        [XmlElement(typeof(DQ_ConformanceResult_Type), ElementName = "DQ_ConformanceResult")]
        public AbstractDQ_Result_Type AbstractDQ_Result {


#
    public partial class TM_Primitive_PropertyType {
        
		[XmlElement(typeof(TimeEdgeType), ElementName = "TimeEdge", Namespace = "http://www.opengis.net/gml/3.2")]
        [XmlElement(typeof(TimeNodeType), ElementName = "TimeNode", Namespace = "http://www.opengis.net/gml/3.2")]
        [XmlElement(typeof(TimePeriodType), ElementName = "TimePeriod", Namespace = "http://www.opengis.net/gml/3.2")]
        [XmlElement(typeof(TimeInstantType), ElementName = "TimeInstant", Namespace = "http://www.opengis.net/gml/3.2")]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.opengis.net/gml/3.2")]
        public AbstractTimePrimitiveType AbstractTimePrimitive {


# 

	   private MD_RestrictionOther_PropertyType[] otherConstraintsField;



       [System.Xml.Serialization.XmlElementAttribute("otherConstraints")]
        public MD_RestrictionOther_PropertyType[] otherConstraints
        {
            get {
                return this.otherConstraintsField;
            }
            set {
                this.otherConstraintsField = value;
            }
        }



    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.isotc211.org/2005/gmx")]
    [System.Xml.Serialization.XmlRootAttribute("Anchor", Namespace = "http://www.isotc211.org/2005/gmx", IsNullable = false)]
    public partial class Anchor_Type
    {

        private string typeField;

        private string hrefField;

        private string valueField;

        public Anchor_Type()
        {
            this.typeField = "simple";
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink")]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink", DataType = "anyURI")]
        public string href
        {
            get
            {
                return this.hrefField;
            }
            set
            {
                this.hrefField = value;
            }
        }


        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]


    public partial class MD_RestrictionOther_PropertyType : IXmlSerializable
    {

        private object mD_RestrictionOtherField;

        [System.Xml.Serialization.XmlElementAttribute("CharacterString", Type = typeof(CharacterString_PropertyType), Namespace = "http://www.isotc211.org/2005/gco")]
        [System.Xml.Serialization.XmlElementAttribute("Anchor", typeof(Anchor_Type), Namespace = "http://www.isotc211.org/2005/gmx")]
        public object MD_RestrictionOther
        {
            get
            {
                return this.mD_RestrictionOtherField;
            }
            set
            {
                this.mD_RestrictionOtherField = value;
            }
        }


        public System.Xml.Schema.XmlSchema GetSchema()
        {
            return null;
        }

        public void ReadXml(System.Xml.XmlReader reader)
        {

            reader.Read();

            if (reader.LocalName == "CharacterString")
            {
                string charStr = reader.ReadElementString("CharacterString", "http://www.isotc211.org/2005/gco");
                reader.Read();

                MD_RestrictionOther = new CharacterString_PropertyType { CharacterString = charStr };
                
            }
            else
            {

                string anchorLink = reader.GetAttribute("xlink:href");
                reader.Read();
                string anchorText = reader.Value;

                    reader.Read();
                    reader.Read();
                    reader.Read();

                MD_RestrictionOther = new Anchor_Type { Value = anchorText, href = anchorLink };

            }



        }

        public void WriteXml(System.Xml.XmlWriter writer)
        {

            if( this.mD_RestrictionOtherField.GetType() ==  typeof(CharacterString_PropertyType))
            {
                 CharacterString_PropertyType charString = this.mD_RestrictionOtherField as CharacterString_PropertyType;
                    if (charString != null)
                    {
                    writer.WriteElementString("gco:CharacterString", charString.CharacterString);
                    }
            }
            else if (this.mD_RestrictionOtherField.GetType() == typeof(Anchor_Type))
            {
                Anchor_Type otherAnchor = this.mD_RestrictionOtherField as Anchor_Type;
                if (otherAnchor != null)
                {
                    writer.WriteStartElement("gmx:Anchor");
                    writer.WriteAttributeString("xlink:href", otherAnchor.href);
                    writer.WriteString(otherAnchor.Value);
                    writer.WriteEndElement();                                
                }
            }     

        }
    }


# change namespace for all http://www.opengis.net/gml/3.2 to http://www.opengis.net/gml and
# those who previously had http://www.opengis.net/gml to http://www.opengis.net/gml/3.2


#Added support for MD_DataIdentification_PropertyType xlink:href

        private string hrefField;

        [System.Xml.Serialization.XmlAttributeAttribute(Form = System.Xml.Schema.XmlSchemaForm.Qualified, Namespace = "http://www.w3.org/1999/xlink", DataType = "anyURI")]
        public string href
        {
            get
            {
                return this.hrefField;
            }
            set
            {
                this.hrefField = value;
            }
        }


#Changed serialization of otherConstraintsField

        public void ReadXml(System.Xml.XmlReader reader)
        {

            var data = reader.ReadOuterXml();

            if (data.Contains("PT_FreeText"))
            {
                XmlDocument doc = new XmlDocument();
                var nsmgr = new XmlNamespaceManager(doc.NameTable);
                nsmgr.AddNamespace("gmd", "http://www.isotc211.org/2005/gmd");
                nsmgr.AddNamespace("gco", "http://www.isotc211.org/2005/gco");
                doc.LoadXml(data);
                string otherConstraints = "";
                string otherConstraintsEnglish = "";
                var otherConstraintsNode = doc.SelectSingleNode("//gmd:otherConstraints/gco:CharacterString", nsmgr);
                if (otherConstraintsNode != null)
                    otherConstraints = otherConstraintsNode.InnerText;
                var otherConstraintsEnglishNode = doc.SelectSingleNode("//gmd:otherConstraints/gmd:PT_FreeText/gmd:textGroup/gmd:LocalisedCharacterString[@locale='#ENG']", nsmgr);
                if (otherConstraintsEnglishNode != null)
                    otherConstraintsEnglish = otherConstraintsEnglishNode.InnerText;
                MD_RestrictionOther = CreateFreeTextElement(otherConstraints, otherConstraintsEnglish);

            }
            else if (data.Contains("gmx:Anchor"))
            {
                XmlDocument doc = new XmlDocument();
                var nsmgr = new XmlNamespaceManager(doc.NameTable);
                nsmgr.AddNamespace("gmd", "http://www.isotc211.org/2005/gmd");
                nsmgr.AddNamespace("gmx", "http://www.isotc211.org/2005/gmx");
                nsmgr.AddNamespace("xlink", "http://www.w3.org/1999/xlink");
                doc.LoadXml(data);
                string otherConstraints = "";
                string otherConstraintsLink = "";
                var otherConstraintsNode = doc.SelectSingleNode("//gmd:otherConstraints/gmx:Anchor", nsmgr);
                if (otherConstraintsNode != null)
                    otherConstraints = otherConstraintsNode.InnerText;
                var otherConstraintsLinkNode = doc.SelectSingleNode("//gmd:otherConstraints/gmx:Anchor/@xlink:href", nsmgr);
                if (otherConstraintsLinkNode != null)
                    otherConstraintsLink = otherConstraintsLinkNode.InnerText;

                MD_RestrictionOther = new Anchor_Type { Value = otherConstraints, href = otherConstraintsLink };
            }
            else if (data.Contains("gco:CharacterString"))
            {
                XmlDocument doc = new XmlDocument();
                var nsmgr = new XmlNamespaceManager(doc.NameTable);
                nsmgr.AddNamespace("gmd", "http://www.isotc211.org/2005/gmd");
                nsmgr.AddNamespace("gco", "http://www.isotc211.org/2005/gco");
                doc.LoadXml(data);
                string otherConstraints = "";
                var otherConstraintsNode = doc.SelectSingleNode("//gmd:otherConstraints/gco:CharacterString", nsmgr);
                if (otherConstraintsNode != null)
                    otherConstraints = otherConstraintsNode.InnerText;

                MD_RestrictionOther = new CharacterString_PropertyType { CharacterString = otherConstraints };
            }

        }

        public void WriteXml(System.Xml.XmlWriter writer)
        {

            if (this.mD_RestrictionOtherField.GetType() == typeof(PT_FreeText_PropertyType))
            {
                PT_FreeText_PropertyType charString = this.mD_RestrictionOtherField as PT_FreeText_PropertyType;
                if (charString != null)
                {
                    writer.WriteAttributeString("xsi:type", "gmd:PT_FreeText_PropertyType");
                    writer.WriteElementString("gco:CharacterString", charString.CharacterString);
                    writer.WriteStartElement("PT_FreeText", "http://www.isotc211.org/2005/gmd");
                    writer.WriteStartElement("textGroup", "http://www.isotc211.org/2005/gmd");
                    writer.WriteStartElement("LocalisedCharacterString", "http://www.isotc211.org/2005/gmd");
                    writer.WriteAttributeString("locale", "#ENG");
                    writer.WriteValue(GetEnglishValueFromFreeText(charString));
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                }
            }
            else if (this.mD_RestrictionOtherField.GetType() == typeof(CharacterString_PropertyType))
            {
                CharacterString_PropertyType charString = this.mD_RestrictionOtherField as CharacterString_PropertyType;
                if (charString != null)
                {
                    writer.WriteElementString("gco:CharacterString", charString.CharacterString);
                }
            }
            else if (this.mD_RestrictionOtherField.GetType() == typeof(Anchor_Type))
            {
                Anchor_Type otherAnchor = this.mD_RestrictionOtherField as Anchor_Type;
                if (otherAnchor != null)
                {
                    writer.WriteStartElement("gmx:Anchor");
                    writer.WriteAttributeString("xlink:href", otherAnchor.href);
                    writer.WriteString(otherAnchor.Value);
                    writer.WriteEndElement();
                }
            }

        }

        public string GetEnglishValueFromFreeText(CharacterString_PropertyType input)
        {
            string value = null;
            if (input != null)
            {
                PT_FreeText_PropertyType freeText = input as PT_FreeText_PropertyType;
                if (freeText != null && freeText.PT_FreeText != null && freeText.PT_FreeText.textGroup != null)
                {
                    foreach (var localizedStringProperty in freeText.PT_FreeText.textGroup)
                    {
                        if (localizedStringProperty.LocalisedCharacterString != null
                            && localizedStringProperty.LocalisedCharacterString.locale != null
                            && localizedStringProperty.LocalisedCharacterString.locale.ToUpper().Equals("#ENG"))
                        {
                            value = localizedStringProperty.LocalisedCharacterString.Value;
                            break;
                        }
                    }
                }
            }
            return value;
        }

        private PT_FreeText_PropertyType CreateFreeTextElement(string characterString, string englishLocalizedValue)
        {
            return new PT_FreeText_PropertyType
            {
                CharacterString = characterString,
                PT_FreeText = new PT_FreeText_Type
                {
                    textGroup = new LocalisedCharacterString_PropertyType[] {
                            new LocalisedCharacterString_PropertyType {
                                LocalisedCharacterString = new LocalisedCharacterString_Type {
                                     locale = "#ENG",
                                     Value = englishLocalizedValue
                                }
                            }
                        }
                }
            };
        }